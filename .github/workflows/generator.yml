# This is a basic workflow to help you get started with Actions

name: Generator

on:
  push:
    paths:
    - 'scripts/templates/**'
    - 'scripts/module/bootstrap.sh'
    - 'scripts/stack/gen_module.sh'
    - '.github/workflows/generator.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SFX_AUTH_TOKEN: ${{ secrets.SFX_TOKEN }}
      TF_VAR_pagerduty_integration_id: ${{ secrets.PAGERDUTY_INTEGRATION }}
      TF_VAR_environment: "ci-testing"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_version: 0.13.3
        terraform_wrapper: false

    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install j2cli[yaml]

    - name: Setup env
      run: |
        ./scripts/module/bootstrap.sh internal_generator ${TF_VAR_environment}
        for config in scripts/templates/examples/*.yaml; do 
          j2 <(cat scripts/templates/variables.tf.j2 scripts/templates/detector.tf.j2) $config >> modules/internal_generator-${TF_VAR_environment}/gen.tf
        done
        ./scripts/stack/bootstrap.sh
        echo -e "module \"generated\" {\nsource=\"../../modules/internal_generator-${TF_VAR_environment}\"\n$(cat common/modules-args.txt)\n}" >> examples/stack/detectors.tf

    - name: Terraform init
      run: terraform init examples/stack

    - name: Terraform validate
      run: terraform validate examples/stack

    - name: Enable destroy
      run: echo ::set-output name=enabled::1
      id: destroy

    - name: Terraform Apply
      run: echo yes | terraform apply -input=false -lock=false examples/stack

    - name: Terraform Destroy
      if: always() && steps.destroy.outputs.enabled == '1'
      run: terraform destroy -input=false -lock=false -auto-approve examples/stack

